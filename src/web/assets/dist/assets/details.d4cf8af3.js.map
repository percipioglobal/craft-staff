{"version":3,"file":"details.d4cf8af3.js","sources":["../../../../../buildchain/src/vue/organisms/forms/form--import.vue","../../../../../buildchain/src/vue/molecules/listitems/listitem--log.vue","../../../../../buildchain/src/vue/organisms/lists/list--logs.vue","../../../../../buildchain/src/vue/payrun/PayRunDetail.vue","../../../../../buildchain/src/js/payrun-details.ts"],"sourcesContent":["<script setup lang=\"ts\">\n    const props = defineProps({\n        payrun: Object,\n    })\n\n    const csrf = window.api.csrf\n\n</script>\n\n<template>\n  <form\n    method=\"post\"\n    accept-charset=\"UTF-8\"\n    enctype=\"multipart/form-data\"\n    class=\"inline-flex\"\n  >\n    <input\n      type=\"hidden\"\n      name=\"CRAFT_CSRF_TOKEN\"\n      :value=\"csrf\"\n    >\n    <input\n      type=\"hidden\"\n      name=\"action\"\n      value=\"staff-management/pay-run/import\"\n    >\n    <input\n      type=\"hidden\"\n      name=\"payRunId\"\n      :value=\"payrun?.id\"\n    >\n    <input\n      type=\"hidden\"\n      name=\"employerId\"\n      :value=\"payrun?.employerId\"\n    >\n    <input\n      id=\"attendee-csv-file\"\n      type=\"file\"\n      class=\"fixed top-full\"\n      name=\"file\"\n      accept=\".csv\"\n      onchange=\"this.form.submit();\"\n    >\n    <label\n      for=\"attendee-csv-file\"\n      class=\"cursor-pointer inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n    >Upload CSV To Staffology</label>\n  </form>\n</template>","<script setup lang=\"ts\">\n    const props = defineProps({\n        log: Object,\n    })\n\n    const user = (log) => {\n\n        if(log?.firstName || log?.lastName){\n            return `${log.firstName} ${log.lastName}`\n        }\n\n        return log.username\n    }\n\n    const style = (log) => {\n\n        const styles = {\n            'Succeeded': 'bg-emerald-400 text-emerald-900',\n            'Failed': 'bg-red-400 text-red-900',\n            'default': 'bg-orange-400 text-orange-900'\n        }\n\n        return styles[log.status] ?? styles['default']\n    }\n    \n</script>\n\n<template>\n  <div \n    class=\"grid grid-cols-7 border-b border-solid border-gray-200\"\n  >\n    <div class=\"col-span-2 whitespace-nowrap px-3 py-4 flex text-sm text-gray-500\">\n      {{ log.filename }}\n    </div>\n    <div class=\"whitespace-nowrap px-3 py-4 flex text-sm text-gray-500\">\n      {{ log.rowCount }}\n    </div>\n    <div class=\"col-span-2 whitespace-nowrap px-3 py-4 flex text-sm text-gray-500\">\n      {{ user(log) }}\n    </div>\n    <div class=\"whitespace-nowrap px-3 py-4 flex text-sm text-gray-500\">\n      {{ log.dateCreated }}\n    </div>\n    <div class=\"items-center px-3 py-2 flex\">\n      <div\n        :class=\"[\n          'whitespace-nowrap rounded-full text-xs inline-block px-3 py-1 mb-0 font-bold',\n          style(log)\n        ]\"\n      >\n        {{ log.status ? log.status : 'Unknown' }}\n      </div>\n    </div>\n  </div>\n</template>","<script setup lang=\"ts\">\n    import { getPayRunLogs } from '~/js/composables/useAxiosClient'\n    import { ref, onMounted, onUnmounted, watchEffect } from 'vue'\n    import { usePayRunStore } from '~/stores/payrun'\n\n    import LogListItem from '~/vue/molecules/listitems/listitem--log.vue'\n    import LoadingList from '~/vue/molecules/listitems/listitem--loading.vue'\n\n    const store = usePayRunStore()\n\n    const props = defineProps({\n        payrun: String,\n    })\n\n    watchEffect(() => {\n        if(props.payrun) {\n            getPayRunLogs(props.payrun)\n        }\n    })\n\n</script>\n\n<template>\n  <div class=\"mt-8 flex flex-col w-full\">\n    <div class=\"-my-2 overflow-x-auto w-full\">\n      <div class=\"inline-block min-w-full py-2 align-middle\">\n        <div class=\"overflow-hidden border border-solid border-gray-300 md:rounded-lg\">\n          <!-- HEADINGS -->\n          <div class=\"grid grid-cols-7 border-b border-solid border-gray-300\">\n            <div class=\"col-span-2 py-3 px-3 text-left text-sm font-semibold text-gray-900\">\n              Filename\n            </div>\n            <div class=\"py-3 px-3 text-left text-sm font-semibold text-gray-900\">\n              Row count\n            </div>\n            <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n              Uploaded By\n            </div>\n            <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n              Uploaded\n            </div>\n            <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n              Status\n            </div>\n          </div>\n\n          <!-- CONTENT -->\n          <LoadingList v-if=\"!payrun\" />\n\n          <div\n            v-if=\"payrun && store.logs.length === 0\"\n            class=\"grid grid-cols-7 border-b border-solid border-gray-200 py-4 px-3 text-center\"\n          >\n            <div class=\"col-span-7\">\n              There are currently no logs for this pay run\n            </div>\n          </div>\n\n          <LogListItem\n            v-for=\"log in store.logs\"\n            :key=\"log.id\"\n            :log=\"log\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","<script setup lang=\"ts\">\n    import { useQuery } from '@vue/apollo-composable'\n    import { reactive, ref } from 'vue'\n\n    import { fetchPayRun } from '~/js/composables/useAxiosClient'\n    import { usePayRunStore } from '~/stores/payrun'\n    import { PAYRUN } from '~/graphql/payrun.ts'\n\n    import PayRunStats from '~/vue/molecules/stats/stats--payrun.vue'\n    import LoadingStats from '~/vue/molecules/stats/stats--loading.vue'\n    import BannerError from '~/vue/molecules/banners/banner--error.vue'\n    import StatusSynced from '~/vue/molecules/status/status--synced.vue'\n    import FormImport from '~/vue/organisms/forms/form--import.vue'\n    import ListLogs from '~/vue/organisms/lists/list--logs.vue'\n\n    const payRunId = window.location.href.split('/').pop()\n    const taxYear = reactive({\n        current: window.location.href.split('/').at(-2)\n    })\n\n    const { result, loading } = useQuery(\n        PAYRUN, \n        { id: payRunId },\n        { pollInterval: 5000 }\n    )\n    const store = usePayRunStore()\n    const error = ref(window?.validation?.error)\n\n    const downloadTemplate = (id) => {\n        const url = `/admin/staff-management/pay-runs/download-template/${id}`\n        const popout = window.open(url)\n    }\n\n    const handleClose = () => {\n        error.value = ''\n    }  \n\n</script>\n\n<template>\n  <div class=\"md:flex items-start\">\n    <div\n      class=\"flex-grow pr-4\"\n      style=\"margin-bottom:0\"\n    >\n      <div class=\"flex items-center\">\n        <a\n          :href=\"`/admin/staff-management/pay-runs/${result?.payrun?.employerId}/${taxYear.current}`\"\n          title=\"Go back to overview\"\n          class=\"inline-flex no-underline items-center px-2.5 py-1.5 rounded-full text-sm text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          style=\"margin-bottom:0\"\n        >&larr;</a>\n        <h1 class=\"ml-2 text-xl font-semibold text-gray-900\">\n          {{ result?.payrun?.taxYear }} / {{ result?.payrun?.period }}\n        </h1>\n      </div>\n      <p class=\"mt-2 text-sm text-gray-700\">\n        Download the current pay run CSV using the Download button below. When uploading, ensure table headings and the file format (CSV) remain unchanged.\n      </p>\n    </div>\n    <div\n      class=\"mt-4 md:mt-0 flex\"\n      style=\"margin-bottom:0\"\n    >\n      <StatusSynced :date=\"result?.payrun?.dateSynced\" />\n      <button \n        :disabled=\"store.loadingFetched\"\n        class=\"cursor-pointer inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 disabled:bg-indigo-400 disabled:cursor-not-allowed px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\" \n        style=\"margin-bottom:0\" \n        @click=\"fetchPayRun(result?.payrun?.id, taxYear.current)\"\n      >\n        <span>Refresh Pay Run</span>\n        <svg\n          v-if=\"store.loadingFetched\"\n          class=\"animate-spin ml-1 h-3 w-3 text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          style=\"margin-bottom:0\"\n        >\n          <circle\n            class=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            stroke-width=\"4\"\n          />\n          <path\n            class=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"mt-8\">\n    <LoadingStats v-if=\"!result?.payrun\" />\n    <PayRunStats\n      v-if=\"result?.payrun\"\n      :payrun=\"result?.payrun\"\n    />\n  </div>\n\n  <div class=\"mt-8 flex\">\n    <BannerError\n      v-if=\"error\"\n      :error=\"error\"\n      @close=\"handleClose\"\n    />\n\n    <div\n      class=\"sm:flex-auto\"\n      style=\"margin-bottom:0\"\n    >\n      <h2>Uploaded Pay Run Entries</h2>\n      <span\n        class=\"mt-4 md:mt-0 text-xs inline-flex mr-2 flex-grow\"\n        style=\"margin-bottom:0\"\n      >\n        Last Synced: {{ result?.payrun?.dateSynced }}\n      </span>\n    </div>\n    <div\n      v-if=\"result?.payrun\"\n      class=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none space-x-2\"\n      style=\"margin-bottom:0\"\n    >\n      <button\n        class=\"cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        @click=\"downloadTemplate(result?.payrun?.id)\"\n      >\n        Download Latest Pay Run Template\n      </button>\n      <FormImport :payrun=\"result?.payrun\" />            \n    </div>\n\n    <ListLogs :payrun=\"result?.payrun?.id\" />\n  </div>\n</template>","import Details from '~/vue/payrun/PayRunDetail.vue'\nimport { createApp, h, provide } from 'vue'\nimport { createPinia } from 'pinia'\nimport { DefaultApolloClient } from '@vue/apollo-composable'\nimport { defaultClient } from '~/js/composables/useApolloClient'\n\n\nconst payRunDetails = async () => {\n    const payRunDetails = createApp({\n        setup() {\n            provide(DefaultApolloClient, defaultClient)\n        },\n        render: () => h(Details)\n    })\n    payRunDetails.use(createPinia())\n    const root = payRunDetails.mount('#detail-container')\n\n    return root\n}\n\npayRunDetails().then( () => {\n    console.log()\n})"],"names":["Details"],"mappings":"0+PAKU,KAAA,GAAO,OAAO,IAAI,oxBCAlB,KAAA,GAAO,AAAC,GAEP,kBAAK,YAAa,kBAAK,UACf,GAAG,EAAI,aAAa,EAAI,WAG5B,EAAI,SAGT,EAAQ,AAAC,GAAQ,OAEnB,KAAM,GAAS,CACX,UAAa,kCACb,OAAU,0BACV,QAAW,+BAAA,EAGR,MAAA,KAAO,EAAI,UAAX,OAAsB,EAAO,OAAA,2zCCdlC,EAAQ,IAMd,SAAY,IAAM,CACd,AAAG,EAAM,QACL,EAAc,EAAM,MAAM,CAC9B,CACH,qiDCHD,KAAM,GAAW,OAAO,SAAS,KAAK,MAAM,GAAG,EAAE,MAC3C,EAAU,EAAS,CACrB,QAAS,OAAO,SAAS,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,CAAA,CACjD,EAEK,CAAE,SAAQ,WAAY,GACxB,GACA,CAAE,GAAI,CAAA,EACN,CAAE,aAAc,GACpB,CAAA,EACM,EAAQ,IACR,EAAQ,EAAI,8BAAQ,aAAR,cAAoB,KAAK,EAErC,EAAmB,AAAC,GAAO,CAC7B,KAAM,GAAM,sDAAsD,IACnD,OAAO,KAAK,CAAG,CAAA,EAG5B,EAAc,IAAM,CACtB,EAAM,MAAQ,EAAA,swEC3BhB,GAAgB,SAAY,CAC9B,KAAM,GAAgB,EAAU,CAC5B,OAAQ,CACJ,EAAQ,GAAqB,EAAa,CAC9C,EACA,OAAQ,IAAM,EAAEA,EAAO,CAAA,CAC1B,EACa,SAAA,IAAI,IAAa,EAClB,EAAc,MAAM,mBAAmB,CAGxD,EAEA,GAAc,EAAE,KAAM,IAAM,CACxB,QAAQ,IAAI,CAChB,CAAC"}