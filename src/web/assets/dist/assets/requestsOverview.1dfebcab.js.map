{"version":3,"file":"requestsOverview.1dfebcab.js","sources":["../../../../../buildchain/src/vue/requests/Requests.vue","../../../../../buildchain/src/js/requests-overview.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { useQuery } from '@vue/apollo-composable'\nimport { REQUESTS } from '~/graphql/requests.ts'\nimport LoadingList from '~/vue/molecules/listitems/listitem--loading.vue'\nimport NoResultsList from '~/vue/molecules/listitems/listitem--no-results.vue'\nimport RequestList from '~/vue/organisms/lists/list--requests.vue'\n\nconst pagination = ref({\n    currentPage: 0,\n    hitsPerPage: 30,\n    total: 0\n})\nconst filter = ref('all')\nconst variables = ref({\n    limit: pagination.value.hitsPerPage,\n    offset: pagination.value.currentPage * pagination.value.hitsPerPage\n})\nconst { result, loading, fetchMore, onResult } = useQuery(REQUESTS, variables.value)\n\nonResult(queryResult => {\n    pagination.value.total = queryResult.data.RequestCount\n})\n\nconst onLoadMore = () => {\n    pagination.value.currentPage += 1\n\n    fetchMore({\n        variables: variables.value,\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n            // No new feed posts\n            if (!fetchMoreResult) return previousResult\n\n            // Concat previous feed with new feed posts\n            return {\n                ...previousResult,\n                Requests: [\n                    ...previousResult.Requests,\n                    ...fetchMoreResult.Requests\n                ],\n                RequestCount: fetchMoreResult.RequestCount\n            }\n        },\n    })\n}\n\nconst setFilter = (filterValue) => {\n    if(filterValue !== 'all') {\n        variables.value = {\n            limit: pagination.value.hitsPerPage,\n            offset: pagination.value.currentPage * pagination.value.hitsPerPage,\n            status: filterValue\n        }\n    } else {\n        variables.value = {\n            limit: pagination.value.hitsPerPage,\n            offset: pagination.value.currentPage * pagination.value.hitsPerPage,\n        }\n    }\n\n    filter.value = filterValue\n\n    fetchMore({\n        variables: variables.value,\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n            return {\n                Requests: fetchMoreResult.Requests,\n                RequestCount: fetchMoreResult.RequestCount\n            }\n        },\n    })\n}\n</script>\n\n<template>\n\n    <div class=\"sm:flex\">\n        <div class=\"sm:flex-auto\">\n            <h1 class=\"text-xl font-semibold text-gray-900\">Requests</h1>\n            <p class=\"mt-2 text-sm text-gray-700\">Select a request to handle the employees request.</p>\n        </div>\n    </div>\n    <div class=\"mt-4 flex justify-end\">\n        <span class=\"relative z-0 inline-flex shadow-sm rounded-md\">\n            <button\n                @click=\"() => setFilter('all')\"\n                :class=\"[\n                    'cursor-pointer font-bold relative inline-flex items-center px-4 py-2 rounded-l-md text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500',\n                    filter === 'all' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-indigo-400 hover:text-white'\n                ]\"\n            >\n                All\n            </button>\n            <button\n                @click=\"() => setFilter('pending')\"\n                :class=\"[\n                    'cursor-pointer font-bold -ml-px relative inline-flex items-center px-4 py-2 text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500',\n                    filter === 'pending' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-indigo-400 hover:text-white'\n                ]\"\n            >\n                Pending\n            </button>\n            <button\n                @click=\"() => setFilter('approved')\"\n                :class=\"[\n                    'cursor-pointer font-bold -ml-px relative inline-flex items-center px-4 py-2 text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500',\n                    filter === 'approved' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-indigo-400 hover:text-white'\n                ]\"\n            >\n                Approved\n            </button>\n            <button\n                @click=\"() => setFilter('declined')\"\n                :class=\"[\n                    'cursor-pointer font-bold -ml-px relative inline-flex items-center px-4 py-2 rounded-r-md text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500',\n                    filter === 'declined' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-indigo-400 hover:text-white'\n                ]\"\n            >\n                Declined\n            </button>\n        </span>\n    </div>\n    <div class=\"mt-8 flex flex-col w-full\">\n        <div class=\"-my-2 overflow-x-auto w-full\">\n            <div class=\"inline-block min-w-full overflow-scroll py-2 align-middle\">\n                <div class=\"shadow border border-solid border-gray-300 md:rounded-lg\">\n\n                    <!-- HEADINGS -->\n                    <div class=\"grid grid-cols-11 border-b border-solid border-gray-300\">\n                        <div class=\"col-span-2 py-3.5 pl-4 pr-3 sm:pl-6 text-left text-sm font-semibold text-gray-900\">Employee</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Company</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Request Type</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Requested Date</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Administered By</div>\n                        <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Status</div>\n                    </div>\n\n                    <LoadingList v-if=\"loading\" />\n                    <NoResultsList v-if=\"!loading && result?.Requests?.length === 0\" />\n                    <RequestList v-if=\"result\" :requests=\"result.Requests\" />\n                </div>\n            </div>\n        </div>\n        <button\n            v-if=\"result?.Requests?.length !== pagination.total && !loading\"\n            @click=\"onLoadMore\"\n            class=\"cursor-pointer mt-6 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 disabled:bg-indigo-400 disabled:cursor-not-allowed px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n        >\n            <span>Load more ({{ pagination.total - result?.Requests?.length }})</span>\n            <svg v-if=\"loadig\" class=\"animate-spin ml-1 h-3 w-3 text-white mb-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle><path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>\n        </button>\n    </div>\n\n</template>","import Requests from '~/vue/requests/Requests.vue'\nimport { createApp, h, provide } from 'vue'\nimport { createPinia } from 'pinia'\nimport { DefaultApolloClient } from '@vue/apollo-composable'\nimport { defaultClient } from '~/js/composables/useApolloClient'\n\nconst requestsOverview = async () => {\n    const request = createApp({\n        setup() {\n            provide(DefaultApolloClient, defaultClient)\n        },\n        render: () => h(Requests)\n    })\n    request.use(createPinia())\n    const root = request.mount('#request-container')\n\n    return root\n}\n\nrequestsOverview().then( () => {\n    console.log()\n})"],"names":["Requests"],"mappings":"8mJAQA,KAAM,GAAa,EAAI,CACnB,YAAa,EACb,YAAa,GACb,MAAO,CAAA,CACV,EACK,EAAS,EAAI,KAAK,EAClB,EAAY,EAAI,CAClB,MAAO,EAAW,MAAM,YACxB,OAAQ,EAAW,MAAM,YAAc,EAAW,MAAM,WAAA,CAC3D,EACK,CAAE,SAAQ,UAAS,YAAW,YAAa,EAAS,EAAU,EAAU,KAAK,EAEnF,EAAS,AAAe,GAAA,CACT,EAAA,MAAM,MAAQ,EAAY,KAAK,YAAA,CAC7C,EAED,KAAM,GAAa,IAAM,CACrB,EAAW,MAAM,aAAe,EAEtB,EAAA,CACN,UAAW,EAAU,MACrB,YAAa,CAAC,EAAgB,CAAE,qBAEvB,EAGE,CACH,GAAG,EACH,SAAU,CACN,GAAG,EAAe,SAClB,GAAG,EAAgB,QACvB,EACA,aAAc,EAAgB,YAAA,EATL,CAWjC,CACH,CAAA,EAGC,EAAY,AAAC,GAAgB,CAC/B,AAAG,IAAgB,MACf,EAAU,MAAQ,CACd,MAAO,EAAW,MAAM,YACxB,OAAQ,EAAW,MAAM,YAAc,EAAW,MAAM,YACxD,OAAQ,CAAA,EAGZ,EAAU,MAAQ,CACd,MAAO,EAAW,MAAM,YACxB,OAAQ,EAAW,MAAM,YAAc,EAAW,MAAM,WAAA,EAIhE,EAAO,MAAQ,EAEL,EAAA,CACN,UAAW,EAAU,MACrB,YAAa,CAAC,EAAgB,CAAE,qBACrB,EACH,SAAU,EAAgB,SAC1B,aAAc,EAAgB,YAAA,EAEtC,CACH,CAAA,w7EChEC,GAAmB,SAAY,CACjC,KAAM,GAAU,EAAU,CACtB,OAAQ,CACJ,EAAQ,EAAqB,CAAa,CAC9C,EACA,OAAQ,IAAM,EAAEA,EAAQ,CAAA,CAC3B,EACO,SAAA,IAAI,GAAa,EACZ,EAAQ,MAAM,oBAAoB,CAGnD,EAEA,GAAiB,EAAE,KAAM,IAAM,CAC3B,QAAQ,IAAI,CAChB,CAAC"}