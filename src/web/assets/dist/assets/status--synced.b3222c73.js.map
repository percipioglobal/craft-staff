{"version":3,"file":"status--synced.b3222c73.js","sources":["../../../../../buildchain/src/graphql/payrun.ts","../../../../../buildchain/src/js/composables/useCurrencyFormat.ts"],"sourcesContent":["import { gql } from 'graphql-tag'\n\nexport const PAYRUNS = gql`\n    query Payruns($employerId: [ID]) {\n        payruns(employerId: $employerId) {\n            id,\n            employerId\n            taxYear\n            period\n            employeeCount\n            startDate @formatDateTime(format:\"jS M, Y\")\n            endDate @formatDateTime(format:\"jS M, Y\")\n            paymentDate @formatDateTime(format:\"jS M, Y\")\n            dateUpdated @formatDateTime(format:\"jS M, Y\")\n            dateSynced:dateUpdated @formatDateTime(format:\"Y-m-d H:i\")\n            employer\n            state\n            totals{\n                totalCost\n            }\n        }\n    }\n`\n\nexport const PAYRUN = gql`\n    query Payrun($id: [QueryArgument]) {\n        payrun(id: $id) {\n            id,\n            paymentDate @formatDateTime(format:\"j M, Y\")\n            dateSynced:dateUpdated @formatDateTime(format:\"Y-m-d H:i\")\n            employerId\n            taxYear\n            period\n            totals {\n                totalCost\n                gross\n                tax\n                employerNi\n                employeeNi\n            }\n        }\n    }\n`","export const format = (amount: String) => {\n    if (!amount) {\n        return amount\n    }\n\n    return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n}"],"names":[],"mappings":"wKAEa,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBV,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECxBT,EAAS,AAAC,GACd,GAIE,EAAO,QAAQ,GAAG,QAAQ,oBAAqB"}