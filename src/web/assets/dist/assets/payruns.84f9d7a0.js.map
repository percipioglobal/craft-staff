{"version":3,"file":"payruns.84f9d7a0.js","sources":["../../../../../buildchain/src/vue/payrun/PayRunList.vue","../../../../../buildchain/src/js/payruns.ts"],"sourcesContent":["<script setup lang=\"ts\">\n    import { useQuery } from '@vue/apollo-composable'\n    import { storeToRefs } from 'pinia'\n\n    import { fetchPayRuns } from '~/js/composables/useAxiosClient'\n    import { usePayRunStore } from '~/stores/payrun'\n    import { PAYRUNS } from '~/graphql/payrun.ts'\n\n    import PayRunList from '~/vue/molecules/listitems/listitem--payrun.vue'\n    import LoadingList from '~/vue/molecules/listitems/listitem--loading.vue'\n    import StatusSynced from '~/vue/molecules/status/status--synced.vue'\n\n    const employerId = window.location.href.split(\"/\").pop()\n    const { result, loading } = useQuery(\n        PAYRUNS, \n        { employerId: employerId }, \n        { pollInterval: 5000 }\n    )\n    const store = usePayRunStore()\n    const { queue } = storeToRefs(store)\n\n\n    const getLatestSync = (payruns) => {\n        const sorted = payruns.sort((a, b) => (a.dateSynced < b.dateSynced) ? 1 : -1)\n        return sorted[0]?.dateSynced\n    }\n\n</script>\n\n<template>\n\n    <div class=\"md:flex items-start\" v-if=\"result\">\n        <div class=\"flex-grow pr-4\" style=\"margin-bottom:0\">\n            <div class=\"flex items-center\">\n                <a href=\"/admin/staff-management/pay-runs\" :title=\"`Back to ${result.payruns[0]?.employer}`\" class=\"inline-flex no-underline items-center px-2.5 py-1.5 rounded-full text-sm text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" style=\"margin-bottom:0\">&larr;</a>\n                <h1 class=\"ml-1 text-xl font-semibold text-gray-900\">{{result.payruns[0]?.employer}}</h1>\n            </div>\n            <p class=\"mt-2 text-sm text-gray-700\">The table below shows payrun overviews for {{ result.payruns[0]?.employer }}. If a payrun has recently been setup in Staffology but does not yet appear below, click the Fetch&nbsp;Pay&nbsp;Runs button to update. </p>\n        </div>\n        <div class=\"mt-4 md:mt-0 flex\" style=\"margin-bottom:0\">\n            <StatusSynced :date=\"getLatestSync(result.payruns)\" />\n            <button \n                @click=\"fetchPayRuns(result.payruns[0]?.employerId)\" \n                :disabled=\"store.loadingFetched\" \n                class=\"cursor-pointer inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 disabled:bg-indigo-400 disabled:cursor-not-allowed px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\" \n                style=\"margin-bottom:0\"\n            >\n                <span>Refresh Pay Runs</span>\n                <svg v-if=\"store.loadingFetched\" class=\"animate-spin ml-1 h-3 w-3 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" style=\"margin-bottom:0\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n            </button>\n        </div>\n    </div>\n    <div class=\"mt-8 flex flex-col w-full\" v-if=\"result\">\n        <div class=\"-my-2 overflow-x-auto w-full\">\n            <div class=\"inline-block min-w-full py-2 align-middle\">\n                <div class=\"overflow-hidden shadow border border-solid border-gray-300 md:rounded-lg\">\n\n                    <!-- HEADINGS -->\n                    <div class=\"grid grid-cols-4 lg:grid-cols-7 border-b border-solid border-gray-300\">\n                        <div class=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">Period</div>\n                        <div class=\"hide lg:block px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Entries</div>\n                        <div class=\"hide lg:block col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Dates</div>\n                        <div class=\"hide lg:block px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Cost</div>\n                        <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Pay Date</div>\n                        <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Last synced</div>\n                    </div>\n\n                    <LoadingList v-if=\"loading\" />\n\n                    <div class=\"grid grid-cols-7 border-b border-solid border-gray-200 py-4 px-3 text-center\" v-if=\"!loading && result.payruns.length === 0\">\n                        <div class=\"col-span-7\">There are currently no pay runs for this employer</div>\n                    </div>\n\n                    <!-- CONTENT -->\n                    <PayRunList :payrun-data=\"result.payruns\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>","import PayRuns from '~/vue/payrun/PayRunList.vue'\nimport { createApp, h, provide } from 'vue'\nimport { createPinia } from 'pinia'\nimport { DefaultApolloClient } from '@vue/apollo-composable'\nimport { defaultClient } from '~/js/composables/useApolloClient'\n\n\nconst payruns = async () => {\n    const payruns = createApp({\n        setup() {\n            provide(DefaultApolloClient, defaultClient)\n        },\n        render: () => h(PayRuns)\n    })\n    payruns.use(createPinia())\n    const root = payruns.mount('#payruns-container')\n\n    return root\n}\n\npayruns().then( () => {\n    console.log()\n})"],"names":["PayRuns"],"mappings":"8mHAYU,GAAa,OAAO,SAAS,KAAK,MAAM,KAAK,MAC7C,CAAE,SAAQ,WAAY,EACxB,EACA,CAAE,cACF,CAAE,aAAc,MAEd,EAAQ,IACI,EAAY,QAGxB,GAAgB,AAAC,GAAY,aAExB,GADQ,EAAQ,KAAK,CAAC,EAAG,IAAO,EAAE,WAAa,EAAE,WAAc,EAAI,IAC5D,KAAP,cAAW,2kDCjBpB,GAAU,SAAY,MAClB,GAAU,EAAU,CACtB,OAAQ,GACI,EAAqB,IAEjC,OAAQ,IAAM,EAAEA,eAEZ,IAAI,KACC,EAAQ,MAAM,uBAK/B,KAAU,KAAM,IAAM,SACV"}