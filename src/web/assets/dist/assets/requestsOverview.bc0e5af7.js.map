{"version":3,"file":"requestsOverview.bc0e5af7.js","sources":["../../../../../buildchain/src/graphql/requests.ts","../../../../../buildchain/src/vue/requests/Requests.vue","../../../../../buildchain/src/js/requests-overview.ts"],"sourcesContent":["import { gql } from 'graphql-tag'\n\nexport const REQUESTS = gql`\n    query Requests(\n        $employerId: [Int], \n        $employeeId: [Int], \n        $type: [String], \n        $status: [String],\n        $limit: Int,\n        $offset: Int,\n    ){\n        Requests(\n            employerId: $employerId \n            employeeId: $employeeId \n            type: $type \n            status: $status\n            limit: $limit,\n            offset: $offset,\n        ) {\n            id\n            data\n            administerId\n            dateAdministered @formatDateTime(format:\"jS M, Y\")\n            employerId\n            employeeId\n            dateUpdated @formatDateTime(format:\"jS M, Y\")\n            dateCreated @formatDateTime(format:\"jS M, Y\")\n            status\n            employer\n            type\n            employee {\n                personalDetails {\n                    firstName\n                    lastName\n                }\n            }\n        }\n        RequestCount\n    }\n`\n\nexport const WRITE_REQUEST = gql`\n    mutation CreateRequest($employerId: Int!, $employeeId: Int!, $type: String!, $status: String, $data: String!) {\n      CreateRequest(\n        employeeId: $employeeId,\n        employerId: $employerId,\n        type: $type,\n        status: $status,\n        data: $data\n      ) {\n        id,\n        data\n      }\n    }\n`;","<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { useQuery } from '@vue/apollo-composable'\nimport { REQUESTS } from '~/graphql/requests.ts'\nimport LoadingList from '~/vue/molecules/listitems/listitem--loading.vue'\nimport RequestList from '~/vue/organisms/lists/list--requests.vue'\n\nconst pagination = ref({\n    currentPage: 0,\n    hitsPerPage: 5,\n    total: 0\n})\nconst { result, loading, fetchMore, onResult } = useQuery(REQUESTS, {\n    limit: pagination.value.hitsPerPage,\n    offset: pagination.value.currentPage * pagination.value.hitsPerPage\n})\n\nonResult(queryResult => {\n    pagination.value.total = queryResult.data.RequestCount\n})\n\nconst onLoadMore = () => {\n    pagination.value.currentPage += 1\n\n    fetchMore({\n        variables: {\n            limit: pagination.value.hitsPerPage,\n            offset: pagination.value.currentPage * pagination.value.hitsPerPage\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n            // No new feed posts\n            if (!fetchMoreResult) return previousResult\n\n            // Concat previous feed with new feed posts\n            return {\n                ...previousResult,\n                Requests: [\n                    ...previousResult.Requests,\n                    ...fetchMoreResult.Requests\n                ]\n            }\n        },\n    })\n}\n</script>\n\n<template>\n\n    <div class=\"sm:flex\">\n        <div class=\"sm:flex-auto\">\n            <h1 class=\"text-xl font-semibold text-gray-900\">Requests</h1>\n            <p class=\"mt-2 text-sm text-gray-700\">Select a request to handle the employees request.</p>\n        </div>\n        <!--div class=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n            <button type=\"button\" class=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\">Add user</button>\n        </div-->\n    </div>\n    <div class=\"mt-8 flex flex-col w-full\">\n        <div class=\"-my-2 overflow-x-auto w-full\">\n            <div class=\"inline-block min-w-full py-2 align-middle\">\n                <div class=\"overflow-hidden shadow border border-solid border-gray-300 md:rounded-lg\">\n\n                    <!-- HEADINGS -->\n                    <div class=\"grid grid-cols-11 border-b border-solid border-gray-300\">\n                        <div class=\"col-span-2 py-3.5 pl-4 pr-3 sm:pl-6 text-left text-sm font-semibold text-gray-900\">Employee</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Company</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Request Type</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Requested Date</div>\n                        <div class=\"col-span-2 px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Administered By</div>\n                        <div class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">Status</div>\n                    </div>\n\n                    <LoadingList v-if=\"loading\" />\n                    <RequestList v-if=\"result\" :requests=\"result.Requests\" />\n                </div>\n            </div>\n        </div>\n        <button\n            v-if=\"result?.Requests?.length !== pagination.total\"\n            @click=\"onLoadMore\"\n            class=\"cursor-pointer mt-6 inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 disabled:bg-indigo-400 disabled:cursor-not-allowed px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n        >\n            <span>Load more ({{ pagination.total - result?.Requests?.length }})</span>\n            <svg v-if=\"loadig\" class=\"animate-spin ml-1 h-3 w-3 text-white mb-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle><path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>\n        </button>\n    </div>\n\n</template>","import Requests from '~/vue/requests/Requests.vue'\nimport { createApp, h, provide } from 'vue'\nimport { createPinia } from 'pinia'\nimport { DefaultApolloClient } from '@vue/apollo-composable'\nimport { defaultClient } from '~/js/composables/useApolloClient'\n\nconst requestsOverview = async () => {\n    const request = createApp({\n        setup() {\n            provide(DefaultApolloClient, defaultClient)\n        },\n        render: () => h(Requests)\n    })\n    request.use(createPinia())\n    const root = request.mount('#request-container')\n\n    return root\n}\n\nrequestsOverview().then( () => {\n    console.log()\n})"],"names":["Requests"],"mappings":"opBAEa,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wkHClCvB,GAAa,EAAI,CACnB,YAAa,EACb,YAAa,EACb,MAAO,IAEL,CAAE,SAAQ,UAAS,YAAW,YAAa,EAAS,EAAU,CAChE,MAAO,EAAW,MAAM,YACxB,OAAQ,EAAW,MAAM,YAAc,EAAW,MAAM,gBAGnD,GAAe,GACT,MAAM,MAAQ,EAAY,KAAK,oBAGxC,GAAa,IAAM,GACV,MAAM,aAAe,IAEtB,CACN,UAAW,CACP,MAAO,EAAW,MAAM,YACxB,OAAQ,EAAW,MAAM,YAAc,EAAW,MAAM,aAE5D,YAAa,CAAC,EAAgB,CAAE,qBAEvB,EAGE,OACA,GADA,CAEH,SAAU,CACN,GAAG,EAAe,SAClB,GAAG,EAAgB,YAPE,k0BCzBnC,GAAmB,SAAY,MAC3B,GAAU,EAAU,CACtB,OAAQ,GACI,EAAqB,IAEjC,OAAQ,IAAM,EAAEA,eAEZ,IAAI,KACC,EAAQ,MAAM,uBAK/B,KAAmB,KAAM,IAAM,SACnB"}